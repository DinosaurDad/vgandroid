/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package rhcad.touchvg.core;

public class GiPath {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected GiPath(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GiPath obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        touchvgJNI.delete_GiPath(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public GiPath() {
    this(touchvgJNI.new_GiPath__SWIG_0(), true);
  }

  public GiPath(GiPath src) {
    this(touchvgJNI.new_GiPath__SWIG_1(GiPath.getCPtr(src), src), true);
  }

  public GiPath(int count, Point2d points, String types) {
    this(touchvgJNI.new_GiPath__SWIG_2(count, Point2d.getCPtr(points), points, types), true);
  }

  public GiPath copy(GiPath src) {
    return new GiPath(touchvgJNI.GiPath_copy(swigCPtr, this, GiPath.getCPtr(src), src), false);
  }

  public GiPath append(GiPath src) {
    return new GiPath(touchvgJNI.GiPath_append(swigCPtr, this, GiPath.getCPtr(src), src), false);
  }

  public boolean genericRoundLines(int count, Point2d points, float radius, boolean closed) {
    return touchvgJNI.GiPath_genericRoundLines__SWIG_0(swigCPtr, this, count, Point2d.getCPtr(points), points, radius, closed);
  }

  public boolean genericRoundLines(int count, Point2d points, float radius) {
    return touchvgJNI.GiPath_genericRoundLines__SWIG_1(swigCPtr, this, count, Point2d.getCPtr(points), points, radius);
  }

  public int getCount() {
    return touchvgJNI.GiPath_getCount(swigCPtr, this);
  }

  public Point2d getStartPoint() {
    return new Point2d(touchvgJNI.GiPath_getStartPoint(swigCPtr, this), true);
  }

  public Vector2d getStartTangent() {
    return new Vector2d(touchvgJNI.GiPath_getStartTangent(swigCPtr, this), true);
  }

  public Point2d getEndPoint() {
    return new Point2d(touchvgJNI.GiPath_getEndPoint(swigCPtr, this), true);
  }

  public Vector2d getEndTangent() {
    return new Vector2d(touchvgJNI.GiPath_getEndTangent(swigCPtr, this), true);
  }

  public int getNodeType(int index) {
    return touchvgJNI.GiPath_getNodeType(swigCPtr, this, index);
  }

  public Point2d getPoint(int index) {
    return new Point2d(touchvgJNI.GiPath_getPoint(swigCPtr, this, index), true);
  }

  public void setPoint(int index, Point2d pt) {
    touchvgJNI.GiPath_setPoint(swigCPtr, this, index, Point2d.getCPtr(pt), pt);
  }

  public void clear() {
    touchvgJNI.GiPath_clear(swigCPtr, this);
  }

  public void transform(Matrix2d mat) {
    touchvgJNI.GiPath_transform(swigCPtr, this, Matrix2d.getCPtr(mat), mat);
  }

  public void startFigure() {
    touchvgJNI.GiPath_startFigure(swigCPtr, this);
  }

  public boolean moveTo(Point2d point, boolean rel) {
    return touchvgJNI.GiPath_moveTo__SWIG_0(swigCPtr, this, Point2d.getCPtr(point), point, rel);
  }

  public boolean moveTo(Point2d point) {
    return touchvgJNI.GiPath_moveTo__SWIG_1(swigCPtr, this, Point2d.getCPtr(point), point);
  }

  public boolean lineTo(Point2d point, boolean rel) {
    return touchvgJNI.GiPath_lineTo__SWIG_0(swigCPtr, this, Point2d.getCPtr(point), point, rel);
  }

  public boolean lineTo(Point2d point) {
    return touchvgJNI.GiPath_lineTo__SWIG_1(swigCPtr, this, Point2d.getCPtr(point), point);
  }

  public boolean horzTo(float x, boolean rel) {
    return touchvgJNI.GiPath_horzTo__SWIG_0(swigCPtr, this, x, rel);
  }

  public boolean horzTo(float x) {
    return touchvgJNI.GiPath_horzTo__SWIG_1(swigCPtr, this, x);
  }

  public boolean vertTo(float y, boolean rel) {
    return touchvgJNI.GiPath_vertTo__SWIG_0(swigCPtr, this, y, rel);
  }

  public boolean vertTo(float y) {
    return touchvgJNI.GiPath_vertTo__SWIG_1(swigCPtr, this, y);
  }

  public boolean linesTo(int count, Point2d points, boolean rel) {
    return touchvgJNI.GiPath_linesTo__SWIG_0(swigCPtr, this, count, Point2d.getCPtr(points), points, rel);
  }

  public boolean linesTo(int count, Point2d points) {
    return touchvgJNI.GiPath_linesTo__SWIG_1(swigCPtr, this, count, Point2d.getCPtr(points), points);
  }

  public boolean beziersTo(int count, Point2d points, boolean reverse, boolean rel) {
    return touchvgJNI.GiPath_beziersTo__SWIG_0(swigCPtr, this, count, Point2d.getCPtr(points), points, reverse, rel);
  }

  public boolean beziersTo(int count, Point2d points, boolean reverse) {
    return touchvgJNI.GiPath_beziersTo__SWIG_1(swigCPtr, this, count, Point2d.getCPtr(points), points, reverse);
  }

  public boolean beziersTo(int count, Point2d points) {
    return touchvgJNI.GiPath_beziersTo__SWIG_2(swigCPtr, this, count, Point2d.getCPtr(points), points);
  }

  public boolean bezierTo(Point2d cp1, Point2d cp2, Point2d end, boolean rel) {
    return touchvgJNI.GiPath_bezierTo__SWIG_0(swigCPtr, this, Point2d.getCPtr(cp1), cp1, Point2d.getCPtr(cp2), cp2, Point2d.getCPtr(end), end, rel);
  }

  public boolean bezierTo(Point2d cp1, Point2d cp2, Point2d end) {
    return touchvgJNI.GiPath_bezierTo__SWIG_1(swigCPtr, this, Point2d.getCPtr(cp1), cp1, Point2d.getCPtr(cp2), cp2, Point2d.getCPtr(end), end);
  }

  public boolean smoothBezierTo(Point2d cp2, Point2d end, boolean rel) {
    return touchvgJNI.GiPath_smoothBezierTo__SWIG_0(swigCPtr, this, Point2d.getCPtr(cp2), cp2, Point2d.getCPtr(end), end, rel);
  }

  public boolean smoothBezierTo(Point2d cp2, Point2d end) {
    return touchvgJNI.GiPath_smoothBezierTo__SWIG_1(swigCPtr, this, Point2d.getCPtr(cp2), cp2, Point2d.getCPtr(end), end);
  }

  public boolean quadsTo(int count, Point2d points, boolean rel) {
    return touchvgJNI.GiPath_quadsTo__SWIG_0(swigCPtr, this, count, Point2d.getCPtr(points), points, rel);
  }

  public boolean quadsTo(int count, Point2d points) {
    return touchvgJNI.GiPath_quadsTo__SWIG_1(swigCPtr, this, count, Point2d.getCPtr(points), points);
  }

  public boolean quadTo(Point2d cp, Point2d end, boolean rel) {
    return touchvgJNI.GiPath_quadTo__SWIG_0(swigCPtr, this, Point2d.getCPtr(cp), cp, Point2d.getCPtr(end), end, rel);
  }

  public boolean quadTo(Point2d cp, Point2d end) {
    return touchvgJNI.GiPath_quadTo__SWIG_1(swigCPtr, this, Point2d.getCPtr(cp), cp, Point2d.getCPtr(end), end);
  }

  public boolean smoothQuadTo(Point2d end, boolean rel) {
    return touchvgJNI.GiPath_smoothQuadTo__SWIG_0(swigCPtr, this, Point2d.getCPtr(end), end, rel);
  }

  public boolean smoothQuadTo(Point2d end) {
    return touchvgJNI.GiPath_smoothQuadTo__SWIG_1(swigCPtr, this, Point2d.getCPtr(end), end);
  }

  public boolean arcTo(Point2d point, boolean rel) {
    return touchvgJNI.GiPath_arcTo__SWIG_0(swigCPtr, this, Point2d.getCPtr(point), point, rel);
  }

  public boolean arcTo(Point2d point) {
    return touchvgJNI.GiPath_arcTo__SWIG_1(swigCPtr, this, Point2d.getCPtr(point), point);
  }

  public boolean arcTo(Point2d point, Point2d end, boolean rel) {
    return touchvgJNI.GiPath_arcTo__SWIG_2(swigCPtr, this, Point2d.getCPtr(point), point, Point2d.getCPtr(end), end, rel);
  }

  public boolean arcTo(Point2d point, Point2d end) {
    return touchvgJNI.GiPath_arcTo__SWIG_3(swigCPtr, this, Point2d.getCPtr(point), point, Point2d.getCPtr(end), end);
  }

  public boolean closeFigure() {
    return touchvgJNI.GiPath_closeFigure(swigCPtr, this);
  }

}
